Points-to sets of all variables
[]:<ArgToResult: void main(java.lang.String[])>/s1 -> [[]:NewObj{<ArgToResult: void main(java.lang.String[])>[2@L5] new java.lang.String}]
[]:<ArgToResult: void main(java.lang.String[])>/s2 -> [[]:NewObj{<ArgToResult: void main(java.lang.String[])>[2@L5] new java.lang.String}, []:NewObj{<java.lang.String: java.lang.String concat(java.lang.String)>[16@L1947] new java.lang.String}, []:NewObj{<java.lang.String: java.lang.String concat(java.lang.String)>[26@L1953] new java.lang.String}, []:TaintObj{alloc=<ArgToResult: void main(java.lang.String[])>[0@L4] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<ArgToResult: void main(java.lang.String[])>/taint -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<ArgToResult: void main(java.lang.String[])>[0@L4] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<ArgToResult: void main(java.lang.String[])>/temp$0 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<ArgToResult: void main(java.lang.String[])>[0@L4] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<ArgToResult: void main(java.lang.String[])>/temp$1 -> [[]:NewObj{<ArgToResult: void main(java.lang.String[])>[2@L5] new java.lang.String}]
[]:<ArgToResult: void main(java.lang.String[])>/temp$2 -> [[]:NewObj{<ArgToResult: void main(java.lang.String[])>[2@L5] new java.lang.String}, []:NewObj{<java.lang.String: java.lang.String concat(java.lang.String)>[16@L1947] new java.lang.String}, []:NewObj{<java.lang.String: java.lang.String concat(java.lang.String)>[26@L1953] new java.lang.String}, []:TaintObj{alloc=<ArgToResult: void main(java.lang.String[])>[0@L4] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<SourceSink: java.lang.String source()>/temp$0 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}]
[]:<SourceSink: void sink(java.lang.String)>/s -> [[]:NewObj{<ArgToResult: void main(java.lang.String[])>[2@L5] new java.lang.String}, []:NewObj{<java.lang.String: java.lang.String concat(java.lang.String)>[16@L1947] new java.lang.String}, []:NewObj{<java.lang.String: java.lang.String concat(java.lang.String)>[26@L1953] new java.lang.String}, []:TaintObj{alloc=<ArgToResult: void main(java.lang.String[])>[0@L4] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<java.lang.AbstractStringBuilder: boolean isLatin1()>/$b0 -> []
[]:<java.lang.AbstractStringBuilder: boolean isLatin1()>/$z0 -> []
[]:<java.lang.AbstractStringBuilder: boolean isLatin1()>/$z1 -> []
[]:<java.lang.AbstractStringBuilder: boolean isLatin1()>/%this -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.AbstractStringBuilder: byte getCoder()>/$b0 -> []
[]:<java.lang.AbstractStringBuilder: byte getCoder()>/$z0 -> []
[]:<java.lang.AbstractStringBuilder: byte getCoder()>/%this -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.AbstractStringBuilder: int hugeCapacity(int)>/$b0 -> []
[]:<java.lang.AbstractStringBuilder: int hugeCapacity(int)>/$b2 -> []
[]:<java.lang.AbstractStringBuilder: int hugeCapacity(int)>/$i6 -> []
[]:<java.lang.AbstractStringBuilder: int hugeCapacity(int)>/$r1 -> [[]:MergedObj{<Merged java.lang.OutOfMemoryError>}]
[]:<java.lang.AbstractStringBuilder: int hugeCapacity(int)>/%this -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.AbstractStringBuilder: int hugeCapacity(int)>/i1 -> []
[]:<java.lang.AbstractStringBuilder: int hugeCapacity(int)>/i4 -> []
[]:<java.lang.AbstractStringBuilder: int newCapacity(int)>/$b0 -> []
[]:<java.lang.AbstractStringBuilder: int newCapacity(int)>/$b6 -> []
[]:<java.lang.AbstractStringBuilder: int newCapacity(int)>/$i10 -> []
[]:<java.lang.AbstractStringBuilder: int newCapacity(int)>/$r1 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.AbstractStringBuilder: int newCapacity(int)>/%this -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.AbstractStringBuilder: int newCapacity(int)>/i4 -> []
[]:<java.lang.AbstractStringBuilder: int newCapacity(int)>/i9 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(int)>/$i2 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(int)>/$r1 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(int)>/$r2 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(int)>/$z0 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(int)>/%this -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(int)>/i0 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(int)>/i1 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(int)>/i3 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.String)>/$i1 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.String)>/$i2 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.String)>/$i3 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.String)>/$i4 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.String)>/$i5 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.String)>/$r2 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.String)>/%this -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.String)>/r0 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder appendNull()>/$i0 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder appendNull()>/$i1 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder appendNull()>/$z0 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder appendNull()>/%intconst3 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder appendNull()>/%intconst4 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder appendNull()>/%intconst5 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder appendNull()>/%this -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder appendNull()>/i2 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder appendNull()>/i6 -> []
[]:<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder appendNull()>/r1 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.AbstractStringBuilder: void <init>(int)>/$r1 -> [[]:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}]
[]:<java.lang.AbstractStringBuilder: void <init>(int)>/$r2 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}]
[]:<java.lang.AbstractStringBuilder: void <init>(int)>/$z0 -> []
[]:<java.lang.AbstractStringBuilder: void <init>(int)>/%intconst0 -> []
[]:<java.lang.AbstractStringBuilder: void <init>(int)>/%intconst1 -> []
[]:<java.lang.AbstractStringBuilder: void <init>(int)>/%this -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.AbstractStringBuilder: void <init>(int)>/i0 -> []
[]:<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>/$b0 -> []
[]:<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>/$b6 -> []
[]:<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>/$i5 -> []
[]:<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>/$i7 -> []
[]:<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>/$r1 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>/$r2 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>/$r3 -> [[]:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>/%this -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.AbstractStringBuilder: void ensureCapacityInternal(int)>/i3 -> []
[]:<java.lang.AbstractStringBuilder: void inflate()>/$i0 -> []
[]:<java.lang.AbstractStringBuilder: void inflate()>/$i1 -> []
[]:<java.lang.AbstractStringBuilder: void inflate()>/$r1 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.AbstractStringBuilder: void inflate()>/$r3 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.AbstractStringBuilder: void inflate()>/$z0 -> []
[]:<java.lang.AbstractStringBuilder: void inflate()>/%intconst0 -> []
[]:<java.lang.AbstractStringBuilder: void inflate()>/%intconst1 -> []
[]:<java.lang.AbstractStringBuilder: void inflate()>/%this -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.AbstractStringBuilder: void inflate()>/r2 -> [[]:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}]
[]:<java.lang.AbstractStringBuilder: void putStringAt(int,java.lang.String)>/$b0 -> []
[]:<java.lang.AbstractStringBuilder: void putStringAt(int,java.lang.String)>/$b3 -> []
[]:<java.lang.AbstractStringBuilder: void putStringAt(int,java.lang.String)>/$r2 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.AbstractStringBuilder: void putStringAt(int,java.lang.String)>/%this -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.AbstractStringBuilder: void putStringAt(int,java.lang.String)>/i2 -> []
[]:<java.lang.AbstractStringBuilder: void putStringAt(int,java.lang.String)>/r1 -> []
[]:<java.lang.AssertionError: void <init>()>/%this -> [[]:MergedObj{<Merged java.lang.AssertionError>}]
[]:<java.lang.AssertionError: void <init>(java.lang.Object)>/$r2 -> []
[]:<java.lang.AssertionError: void <init>(java.lang.Object)>/$r3 -> []
[]:<java.lang.AssertionError: void <init>(java.lang.Object)>/%this -> [[]:MergedObj{<Merged java.lang.AssertionError>}]
[]:<java.lang.AssertionError: void <init>(java.lang.Object)>/r1 -> []
[]:<java.lang.AssertionError: void <init>(java.lang.String)>/%this -> [[]:MergedObj{<Merged java.lang.AssertionError>}]
[]:<java.lang.AssertionError: void <init>(java.lang.String)>/r1 -> []
[]:<java.lang.Error: void <init>()>/%this -> [[]:MergedObj{<Merged java.lang.AssertionError>}, []:MergedObj{<Merged java.lang.OutOfMemoryError>}]
[]:<java.lang.Error: void <init>(java.lang.String)>/%this -> [[]:MergedObj{<Merged java.lang.AssertionError>}, []:MergedObj{<Merged java.lang.OutOfMemoryError>}]
[]:<java.lang.Error: void <init>(java.lang.String)>/r1 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.Exception: void <init>()>/%this -> [[]:MergedObj{<Merged java.lang.NegativeArraySizeException>}]
[]:<java.lang.Exception: void <init>(java.lang.String)>/%this -> [[]:MergedObj{<Merged java.lang.IllegalArgumentException>}, []:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}]
[]:<java.lang.Exception: void <init>(java.lang.String)>/r1 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>/%this -> [[]:MergedObj{<Merged java.lang.IllegalArgumentException>}, []:MergedObj{<Merged java.lang.IllegalStateException>}]
[]:<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>/r1 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>/r2 -> [[]:MergedObj{<Merged java.lang.AssertionError>}]
[]:<java.lang.IllegalArgumentException: void <init>(java.lang.String)>/%this -> [[]:MergedObj{<Merged java.lang.IllegalArgumentException>}]
[]:<java.lang.IllegalArgumentException: void <init>(java.lang.String)>/r1 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>/%this -> [[]:MergedObj{<Merged java.lang.IllegalArgumentException>}]
[]:<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>/r1 -> []
[]:<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>/r2 -> [[]:MergedObj{<Merged java.lang.AssertionError>}]
[]:<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>/%this -> [[]:MergedObj{<Merged java.lang.IllegalStateException>}]
[]:<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>/r1 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>/r2 -> [[]:MergedObj{<Merged java.lang.AssertionError>}]
[]:<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>/%this -> [[]:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}]
[]:<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>/r1 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.Integer: int getChars(int,int,byte[])>/$b3 -> []
[]:<java.lang.Integer: int getChars(int,int,byte[])>/$b5 -> []
[]:<java.lang.Integer: int getChars(int,int,byte[])>/$b7 -> []
[]:<java.lang.Integer: int getChars(int,int,byte[])>/$b8 -> []
[]:<java.lang.Integer: int getChars(int,int,byte[])>/$r1 -> []
[]:<java.lang.Integer: int getChars(int,int,byte[])>/$r2 -> []
[]:<java.lang.Integer: int getChars(int,int,byte[])>/$z1 -> []
[]:<java.lang.Integer: int getChars(int,int,byte[])>/%intconst6 -> []
[]:<java.lang.Integer: int getChars(int,int,byte[])>/i0 -> []
[]:<java.lang.Integer: int getChars(int,int,byte[])>/i10 -> []
[]:<java.lang.Integer: int getChars(int,int,byte[])>/i11 -> []
[]:<java.lang.Integer: int getChars(int,int,byte[])>/i9 -> []
[]:<java.lang.Integer: int getChars(int,int,byte[])>/r0 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.Integer: int getChars(int,int,byte[])>/z0 -> []
[]:<java.lang.Integer: int stringSize(int)>/$i0 -> []
[]:<java.lang.Integer: int stringSize(int)>/$i1 -> []
[]:<java.lang.Integer: int stringSize(int)>/i2 -> []
[]:<java.lang.Math: int min(int,int)>/$i2 -> []
[]:<java.lang.Math: int min(int,int)>/i0 -> []
[]:<java.lang.Math: int min(int,int)>/i1 -> []
[]:<java.lang.NegativeArraySizeException: void <init>()>/%this -> [[]:MergedObj{<Merged java.lang.NegativeArraySizeException>}]
[]:<java.lang.Object: void <init>()>/%this -> [[]:MergedObj{<Merged java.lang.AssertionError>}, []:MergedObj{<Merged java.lang.IllegalArgumentException>}, []:MergedObj{<Merged java.lang.IllegalStateException>}, []:MergedObj{<Merged java.lang.NegativeArraySizeException>}, []:MergedObj{<Merged java.lang.OutOfMemoryError>}, []:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}, []:NewObj{<ArgToResult: void main(java.lang.String[])>[2@L5] new java.lang.String}, []:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:NewObj{<java.lang.String: java.lang.String concat(java.lang.String)>[16@L1947] new java.lang.String}, []:NewObj{<java.lang.String: java.lang.String concat(java.lang.String)>[26@L1953] new java.lang.String}, []:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.OutOfMemoryError: void <init>()>/%this -> [[]:MergedObj{<Merged java.lang.OutOfMemoryError>}]
[]:<java.lang.OutOfMemoryError: void <init>(java.lang.String)>/%this -> [[]:MergedObj{<Merged java.lang.OutOfMemoryError>}]
[]:<java.lang.OutOfMemoryError: void <init>(java.lang.String)>/r1 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.RuntimeException: void <init>()>/%this -> [[]:MergedObj{<Merged java.lang.NegativeArraySizeException>}]
[]:<java.lang.RuntimeException: void <init>(java.lang.String)>/%this -> [[]:MergedObj{<Merged java.lang.IllegalArgumentException>}, []:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}]
[]:<java.lang.RuntimeException: void <init>(java.lang.String)>/r1 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>/%this -> [[]:MergedObj{<Merged java.lang.IllegalArgumentException>}, []:MergedObj{<Merged java.lang.IllegalStateException>}]
[]:<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>/r1 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>/r2 -> [[]:MergedObj{<Merged java.lang.AssertionError>}]
[]:<java.lang.String: byte coder()>/$b0 -> []
[]:<java.lang.String: byte coder()>/$z0 -> []
[]:<java.lang.String: byte coder()>/%this -> [[]:NewObj{<ArgToResult: void main(java.lang.String[])>[2@L5] new java.lang.String}, []:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<ArgToResult: void main(java.lang.String[])>[0@L4] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<java.lang.String: int length()>/$b1 -> []
[]:<java.lang.String: int length()>/$i2 -> []
[]:<java.lang.String: int length()>/$r1 -> []
[]:<java.lang.String: int length()>/%this -> [[]:NewObj{<ArgToResult: void main(java.lang.String[])>[2@L5] new java.lang.String}, []:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<ArgToResult: void main(java.lang.String[])>[0@L4] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/$b1 -> []
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/$b2 -> []
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/$b9 -> []
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/$i3 -> []
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/$i7 -> []
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/$i8 -> []
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/$r2 -> [[]:NewObj{<java.lang.String: java.lang.String concat(java.lang.String)>[26@L1953] new java.lang.String}]
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/$r4 -> [[]:NewObj{<java.lang.String: java.lang.String concat(java.lang.String)>[16@L1947] new java.lang.String}]
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/%intconst0 -> []
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/%intconst1 -> []
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/%this -> [[]:NewObj{<ArgToResult: void main(java.lang.String[])>[2@L5] new java.lang.String}]
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/i0 -> []
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/i10 -> []
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/i6 -> []
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/r0 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<ArgToResult: void main(java.lang.String[])>[0@L4] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/r3 -> [[]:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/r5 -> []
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/r6 -> []
[]:<java.lang.String: java.lang.String concat(java.lang.String)>/r7 -> [[]:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}]
[]:<java.lang.String: java.lang.String valueOf(java.lang.Object)>/$r1 -> []
[]:<java.lang.String: java.lang.String valueOf(java.lang.Object)>/r0 -> []
[]:<java.lang.String: void <init>()>/$b0 -> []
[]:<java.lang.String: void <init>()>/$r2 -> []
[]:<java.lang.String: void <init>()>/%this -> [[]:NewObj{<ArgToResult: void main(java.lang.String[])>[2@L5] new java.lang.String}, []:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}]
[]:<java.lang.String: void <init>(byte[],byte)>/%this -> [[]:NewObj{<java.lang.String: java.lang.String concat(java.lang.String)>[16@L1947] new java.lang.String}, []:NewObj{<java.lang.String: java.lang.String concat(java.lang.String)>[26@L1953] new java.lang.String}, []:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.String: void <init>(byte[],byte)>/b0 -> []
[]:<java.lang.String: void <init>(byte[],byte)>/r1 -> [[]:NewObj{<java.lang.StringUTF16: byte[] compress(byte[],int,int)>[0@L168] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[13@L4030] newarray byte[i2]}]
[]:<java.lang.String: void checkBoundsBeginEnd(int,int,int)>/$r0 -> [[]:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}]
[]:<java.lang.String: void checkBoundsBeginEnd(int,int,int)>/$r1 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}]
[]:<java.lang.String: void checkBoundsBeginEnd(int,int,int)>/$r2 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.String: void checkBoundsBeginEnd(int,int,int)>/$r3 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.String: void checkBoundsBeginEnd(int,int,int)>/$r4 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.String: void checkBoundsBeginEnd(int,int,int)>/$r5 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.String: void checkBoundsBeginEnd(int,int,int)>/$r6 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.String: void checkBoundsBeginEnd(int,int,int)>/$r7 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.String: void checkBoundsBeginEnd(int,int,int)>/$r8 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.String: void checkBoundsBeginEnd(int,int,int)>/%stringconst1 -> []
[]:<java.lang.String: void checkBoundsBeginEnd(int,int,int)>/%stringconst2 -> []
[]:<java.lang.String: void checkBoundsBeginEnd(int,int,int)>/%stringconst3 -> []
[]:<java.lang.String: void checkBoundsBeginEnd(int,int,int)>/i0 -> []
[]:<java.lang.String: void checkBoundsBeginEnd(int,int,int)>/i1 -> []
[]:<java.lang.String: void checkBoundsBeginEnd(int,int,int)>/i2 -> []
[]:<java.lang.String: void checkBoundsOffCount(int,int,int)>/$r0 -> [[]:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}]
[]:<java.lang.String: void checkBoundsOffCount(int,int,int)>/$r1 -> [[]:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}]
[]:<java.lang.String: void checkBoundsOffCount(int,int,int)>/$r2 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.String: void checkBoundsOffCount(int,int,int)>/$r3 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.String: void checkBoundsOffCount(int,int,int)>/$r4 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.String: void checkBoundsOffCount(int,int,int)>/$r5 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.String: void checkBoundsOffCount(int,int,int)>/$r6 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.String: void checkBoundsOffCount(int,int,int)>/$r7 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.String: void checkBoundsOffCount(int,int,int)>/$r8 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.String: void checkBoundsOffCount(int,int,int)>/%stringconst1 -> []
[]:<java.lang.String: void checkBoundsOffCount(int,int,int)>/%stringconst2 -> []
[]:<java.lang.String: void checkBoundsOffCount(int,int,int)>/%stringconst3 -> []
[]:<java.lang.String: void checkBoundsOffCount(int,int,int)>/i0 -> []
[]:<java.lang.String: void checkBoundsOffCount(int,int,int)>/i1 -> []
[]:<java.lang.String: void checkBoundsOffCount(int,int,int)>/i2 -> []
[]:<java.lang.String: void getBytes(byte[],int,byte)>/$b0 -> []
[]:<java.lang.String: void getBytes(byte[],int,byte)>/$i3 -> []
[]:<java.lang.String: void getBytes(byte[],int,byte)>/$i4 -> []
[]:<java.lang.String: void getBytes(byte[],int,byte)>/$i5 -> []
[]:<java.lang.String: void getBytes(byte[],int,byte)>/$r2 -> []
[]:<java.lang.String: void getBytes(byte[],int,byte)>/$r3 -> []
[]:<java.lang.String: void getBytes(byte[],int,byte)>/$r4 -> []
[]:<java.lang.String: void getBytes(byte[],int,byte)>/$r5 -> []
[]:<java.lang.String: void getBytes(byte[],int,byte)>/%intconst0 -> []
[]:<java.lang.String: void getBytes(byte[],int,byte)>/%this -> [[]:NewObj{<ArgToResult: void main(java.lang.String[])>[2@L5] new java.lang.String}, []:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<ArgToResult: void main(java.lang.String[])>[0@L4] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<java.lang.String: void getBytes(byte[],int,byte)>/b1 -> []
[]:<java.lang.String: void getBytes(byte[],int,byte)>/i2 -> []
[]:<java.lang.String: void getBytes(byte[],int,byte)>/r1 -> [[]:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}]
[]:<java.lang.StringBuilder: java.lang.String toString()>/$i0 -> []
[]:<java.lang.StringBuilder: java.lang.String toString()>/$i1 -> []
[]:<java.lang.StringBuilder: java.lang.String toString()>/$r1 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.StringBuilder: java.lang.String toString()>/$r2 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.StringBuilder: java.lang.String toString()>/$r3 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.StringBuilder: java.lang.String toString()>/$z0 -> []
[]:<java.lang.StringBuilder: java.lang.String toString()>/%intconst0 -> []
[]:<java.lang.StringBuilder: java.lang.String toString()>/%this -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.StringBuilder: java.lang.StringBuilder append(int)>/%this -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.StringBuilder: java.lang.StringBuilder append(int)>/i0 -> []
[]:<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>/%this -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>/r1 -> []
[]:<java.lang.StringBuilder: void <init>()>/%intconst0 -> []
[]:<java.lang.StringBuilder: void <init>()>/%this -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>/%this -> [[]:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}]
[]:<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>/r1 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>/$i2 -> []
[]:<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>/$r0 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}]
[]:<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>/$r2 -> [[]:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[13@L4030] newarray byte[i2]}]
[]:<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>/%intconst0 -> []
[]:<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>/i0 -> []
[]:<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>/i1 -> []
[]:<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>/r1 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.StringLatin1: void inflate(byte[],int,byte[],int,int)>/i0 -> []
[]:<java.lang.StringLatin1: void inflate(byte[],int,byte[],int,int)>/i1 -> []
[]:<java.lang.StringLatin1: void inflate(byte[],int,byte[],int,int)>/i2 -> []
[]:<java.lang.StringLatin1: void inflate(byte[],int,byte[],int,int)>/r0 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.StringLatin1: void inflate(byte[],int,byte[],int,int)>/r1 -> [[]:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}]
[]:<java.lang.StringUTF16: byte[] compress(byte[],int,int)>/$i2 -> []
[]:<java.lang.StringUTF16: byte[] compress(byte[],int,int)>/%intconst0 -> []
[]:<java.lang.StringUTF16: byte[] compress(byte[],int,int)>/%nullconst -> []
[]:<java.lang.StringUTF16: byte[] compress(byte[],int,int)>/i0 -> []
[]:<java.lang.StringUTF16: byte[] compress(byte[],int,int)>/i1 -> []
[]:<java.lang.StringUTF16: byte[] compress(byte[],int,int)>/r0 -> [[]:NewObj{<java.lang.StringUTF16: byte[] compress(byte[],int,int)>[0@L168] newarray byte[i0]}]
[]:<java.lang.StringUTF16: byte[] compress(byte[],int,int)>/r1 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.StringUTF16: byte[] newBytesFor(int)>/$r0 -> [[]:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}]
[]:<java.lang.StringUTF16: byte[] newBytesFor(int)>/$r1 -> [[]:MergedObj{<Merged java.lang.OutOfMemoryError>}]
[]:<java.lang.StringUTF16: byte[] newBytesFor(int)>/$r2 -> [[]:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}]
[]:<java.lang.StringUTF16: byte[] newBytesFor(int)>/$r3 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.StringUTF16: byte[] newBytesFor(int)>/$r4 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.StringUTF16: byte[] newBytesFor(int)>/$r5 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.StringUTF16: byte[] newBytesFor(int)>/$r6 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.StringUTF16: byte[] newBytesFor(int)>/$r7 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.StringUTF16: byte[] newBytesFor(int)>/$r8 -> [[]:MergedObj{<Merged java.lang.NegativeArraySizeException>}]
[]:<java.lang.StringUTF16: byte[] newBytesFor(int)>/%intconst1 -> []
[]:<java.lang.StringUTF16: byte[] newBytesFor(int)>/%stringconst2 -> []
[]:<java.lang.StringUTF16: byte[] newBytesFor(int)>/%stringconst3 -> []
[]:<java.lang.StringUTF16: byte[] newBytesFor(int)>/i0 -> []
[]:<java.lang.StringUTF16: char getChar(byte[],int)>/$b0 -> []
[]:<java.lang.StringUTF16: char getChar(byte[],int)>/$b3 -> []
[]:<java.lang.StringUTF16: char getChar(byte[],int)>/$c9 -> []
[]:<java.lang.StringUTF16: char getChar(byte[],int)>/$i1 -> []
[]:<java.lang.StringUTF16: char getChar(byte[],int)>/$i10 -> []
[]:<java.lang.StringUTF16: char getChar(byte[],int)>/$i4 -> []
[]:<java.lang.StringUTF16: char getChar(byte[],int)>/$r1 -> [[]:MergedObj{<Merged java.lang.AssertionError>}]
[]:<java.lang.StringUTF16: char getChar(byte[],int)>/$z0 -> []
[]:<java.lang.StringUTF16: char getChar(byte[],int)>/%stringconst1 -> []
[]:<java.lang.StringUTF16: char getChar(byte[],int)>/i11 -> []
[]:<java.lang.StringUTF16: char getChar(byte[],int)>/r0 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.StringUTF16: int compress(byte[],int,byte[],int,int)>/$b1 -> []
[]:<java.lang.StringUTF16: int compress(byte[],int,byte[],int,int)>/c0 -> []
[]:<java.lang.StringUTF16: int compress(byte[],int,byte[],int,int)>/i2 -> []
[]:<java.lang.StringUTF16: int compress(byte[],int,byte[],int,int)>/i3 -> []
[]:<java.lang.StringUTF16: int compress(byte[],int,byte[],int,int)>/i4 -> []
[]:<java.lang.StringUTF16: int compress(byte[],int,byte[],int,int)>/r0 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.StringUTF16: int compress(byte[],int,byte[],int,int)>/r1 -> [[]:NewObj{<java.lang.StringUTF16: byte[] compress(byte[],int,int)>[0@L168] newarray byte[i0]}]
[]:<java.lang.StringUTF16: int getChars(int,int,byte[])>/$b5 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,byte[])>/$b6 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,byte[])>/$i2 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,byte[])>/$i3 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,byte[])>/$r1 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,byte[])>/$r2 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,byte[])>/$z1 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,byte[])>/%intconst6 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,byte[])>/i0 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,byte[])>/i11 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,byte[])>/i14 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,byte[])>/i7 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,byte[])>/i8 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,byte[])>/i9 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,byte[])>/r0 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.StringUTF16: int getChars(int,int,byte[])>/z0 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,int,byte[])>/$r1 -> [[]:MergedObj{<Merged java.lang.AssertionError>}]
[]:<java.lang.StringUTF16: int getChars(int,int,int,byte[])>/$z0 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,int,byte[])>/i0 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,int,byte[])>/i1 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,int,byte[])>/i2 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,int,byte[])>/i3 -> []
[]:<java.lang.StringUTF16: int getChars(int,int,int,byte[])>/r0 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.StringUTF16: int length(byte[])>/$i1 -> []
[]:<java.lang.StringUTF16: int length(byte[])>/r0 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.StringUTF16: int putCharsAt(byte[],int,char,char,char,char)>/$r1 -> [[]:MergedObj{<Merged java.lang.AssertionError>}]
[]:<java.lang.StringUTF16: int putCharsAt(byte[],int,char,char,char,char)>/$z0 -> []
[]:<java.lang.StringUTF16: int putCharsAt(byte[],int,char,char,char,char)>/c1 -> []
[]:<java.lang.StringUTF16: int putCharsAt(byte[],int,char,char,char,char)>/c2 -> []
[]:<java.lang.StringUTF16: int putCharsAt(byte[],int,char,char,char,char)>/c3 -> []
[]:<java.lang.StringUTF16: int putCharsAt(byte[],int,char,char,char,char)>/c4 -> []
[]:<java.lang.StringUTF16: int putCharsAt(byte[],int,char,char,char,char)>/i0 -> []
[]:<java.lang.StringUTF16: int putCharsAt(byte[],int,char,char,char,char)>/i5 -> []
[]:<java.lang.StringUTF16: int putCharsAt(byte[],int,char,char,char,char)>/i6 -> []
[]:<java.lang.StringUTF16: int putCharsAt(byte[],int,char,char,char,char)>/i7 -> []
[]:<java.lang.StringUTF16: int putCharsAt(byte[],int,char,char,char,char)>/i8 -> []
[]:<java.lang.StringUTF16: int putCharsAt(byte[],int,char,char,char,char)>/r0 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>/$i2 -> []
[]:<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>/$i3 -> []
[]:<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>/$r0 -> [[]:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>/$r2 -> [[]:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[13@L4030] newarray byte[i2]}]
[]:<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>/$r3 -> [[]:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}]
[]:<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>/$z0 -> []
[]:<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>/%intconst0 -> []
[]:<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>/%intconst1 -> []
[]:<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>/i0 -> []
[]:<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>/i1 -> []
[]:<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>/r1 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>/r4 -> [[]:NewObj{<java.lang.StringUTF16: byte[] compress(byte[],int,int)>[0@L168] newarray byte[i0]}]
[]:<java.lang.StringUTF16: void checkBoundsBeginEnd(int,int,byte[])>/$i2 -> []
[]:<java.lang.StringUTF16: void checkBoundsBeginEnd(int,int,byte[])>/i0 -> []
[]:<java.lang.StringUTF16: void checkBoundsBeginEnd(int,int,byte[])>/i1 -> []
[]:<java.lang.StringUTF16: void checkBoundsBeginEnd(int,int,byte[])>/r0 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.StringUTF16: void checkBoundsOffCount(int,int,byte[])>/$i2 -> []
[]:<java.lang.StringUTF16: void checkBoundsOffCount(int,int,byte[])>/i0 -> []
[]:<java.lang.StringUTF16: void checkBoundsOffCount(int,int,byte[])>/i1 -> []
[]:<java.lang.StringUTF16: void checkBoundsOffCount(int,int,byte[])>/r0 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.StringUTF16: void inflate(byte[],int,byte[],int,int)>/$b3 -> []
[]:<java.lang.StringUTF16: void inflate(byte[],int,byte[],int,int)>/$i1 -> []
[]:<java.lang.StringUTF16: void inflate(byte[],int,byte[],int,int)>/$i2 -> []
[]:<java.lang.StringUTF16: void inflate(byte[],int,byte[],int,int)>/$i4 -> []
[]:<java.lang.StringUTF16: void inflate(byte[],int,byte[],int,int)>/i0 -> []
[]:<java.lang.StringUTF16: void inflate(byte[],int,byte[],int,int)>/i5 -> []
[]:<java.lang.StringUTF16: void inflate(byte[],int,byte[],int,int)>/i6 -> []
[]:<java.lang.StringUTF16: void inflate(byte[],int,byte[],int,int)>/r0 -> [[]:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}]
[]:<java.lang.StringUTF16: void inflate(byte[],int,byte[],int,int)>/r1 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.StringUTF16: void putChar(byte[],int,int)>/$b3 -> []
[]:<java.lang.StringUTF16: void putChar(byte[],int,int)>/$b6 -> []
[]:<java.lang.StringUTF16: void putChar(byte[],int,int)>/$i1 -> []
[]:<java.lang.StringUTF16: void putChar(byte[],int,int)>/$i4 -> []
[]:<java.lang.StringUTF16: void putChar(byte[],int,int)>/$i7 -> []
[]:<java.lang.StringUTF16: void putChar(byte[],int,int)>/$r1 -> [[]:MergedObj{<Merged java.lang.AssertionError>}]
[]:<java.lang.StringUTF16: void putChar(byte[],int,int)>/$z0 -> []
[]:<java.lang.StringUTF16: void putChar(byte[],int,int)>/%stringconst1 -> []
[]:<java.lang.StringUTF16: void putChar(byte[],int,int)>/i0 -> []
[]:<java.lang.StringUTF16: void putChar(byte[],int,int)>/i8 -> []
[]:<java.lang.StringUTF16: void putChar(byte[],int,int)>/r0 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>/%native-param0 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>/%native-param1 -> []
[]:<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>/%native-param2 -> [[]:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[13@L4030] newarray byte[i2]}]
[]:<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>/%native-param3 -> []
[]:<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>/%native-param4 -> []
[]:<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>/$r1 -> []
[]:<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>/$r3 -> []
[]:<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>/$r4 -> []
[]:<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>/%intconst0 -> []
[]:<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>/%this -> [[]:MergedObj{<Merged java.lang.AssertionError>}, []:MergedObj{<Merged java.lang.IllegalArgumentException>}, []:MergedObj{<Merged java.lang.IllegalStateException>}, []:MergedObj{<Merged java.lang.NegativeArraySizeException>}, []:MergedObj{<Merged java.lang.OutOfMemoryError>}, []:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}]
[]:<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>/%native-param0 -> []
[]:<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>/%native-this -> [[]:MergedObj{<Merged java.lang.AssertionError>}, []:MergedObj{<Merged java.lang.IllegalArgumentException>}, []:MergedObj{<Merged java.lang.IllegalStateException>}, []:MergedObj{<Merged java.lang.NegativeArraySizeException>}, []:MergedObj{<Merged java.lang.OutOfMemoryError>}, []:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}]
[]:<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>/$r1 -> [[]:MergedObj{<Merged java.lang.AssertionError>}, []:MergedObj{<Merged java.lang.IllegalArgumentException>}, []:MergedObj{<Merged java.lang.NegativeArraySizeException>}, []:MergedObj{<Merged java.lang.OutOfMemoryError>}, []:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}]
[]:<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>/$r3 -> [[]:MergedObj{<Merged java.lang.IllegalArgumentException>}]
[]:<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>/$r4 -> [[]:MergedObj{<Merged java.lang.IllegalStateException>}]
[]:<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>/$r5 -> [[]:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}]
[]:<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>/$r6 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>/$r7 -> []
[]:<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>/$r8 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>/$r9 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>/%stringconst0 -> []
[]:<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>/%stringconst1 -> []
[]:<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>/%stringconst2 -> []
[]:<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>/%this -> [[]:MergedObj{<Merged java.lang.AssertionError>}]
[]:<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>/r2 -> []
[]:<java.lang.Throwable: void <init>()>/$r1 -> []
[]:<java.lang.Throwable: void <init>()>/$r2 -> []
[]:<java.lang.Throwable: void <init>()>/%this -> [[]:MergedObj{<Merged java.lang.AssertionError>}, []:MergedObj{<Merged java.lang.NegativeArraySizeException>}, []:MergedObj{<Merged java.lang.OutOfMemoryError>}]
[]:<java.lang.Throwable: void <init>(java.lang.String)>/$r1 -> []
[]:<java.lang.Throwable: void <init>(java.lang.String)>/$r2 -> []
[]:<java.lang.Throwable: void <init>(java.lang.String)>/%this -> [[]:MergedObj{<Merged java.lang.AssertionError>}, []:MergedObj{<Merged java.lang.IllegalArgumentException>}, []:MergedObj{<Merged java.lang.OutOfMemoryError>}, []:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}]
[]:<java.lang.Throwable: void <init>(java.lang.String)>/r4 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.Throwable: void <init>(java.lang.String,java.lang.Throwable)>/$r1 -> []
[]:<java.lang.Throwable: void <init>(java.lang.String,java.lang.Throwable)>/$r2 -> []
[]:<java.lang.Throwable: void <init>(java.lang.String,java.lang.Throwable)>/%this -> [[]:MergedObj{<Merged java.lang.IllegalArgumentException>}, []:MergedObj{<Merged java.lang.IllegalStateException>}]
[]:<java.lang.Throwable: void <init>(java.lang.String,java.lang.Throwable)>/r4 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.lang.Throwable: void <init>(java.lang.String,java.lang.Throwable)>/r5 -> [[]:MergedObj{<Merged java.lang.AssertionError>}]
[]:<java.lang.VirtualMachineError: void <init>()>/%this -> [[]:MergedObj{<Merged java.lang.OutOfMemoryError>}]
[]:<java.lang.VirtualMachineError: void <init>(java.lang.String)>/%this -> [[]:MergedObj{<Merged java.lang.OutOfMemoryError>}]
[]:<java.lang.VirtualMachineError: void <init>(java.lang.String)>/r1 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.util.Arrays: byte[] copyOf(byte[],int)>/$i1 -> []
[]:<java.util.Arrays: byte[] copyOf(byte[],int)>/$i2 -> []
[]:<java.util.Arrays: byte[] copyOf(byte[],int)>/%intconst0 -> []
[]:<java.util.Arrays: byte[] copyOf(byte[],int)>/i0 -> []
[]:<java.util.Arrays: byte[] copyOf(byte[],int)>/r0 -> [[]:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.util.Arrays: byte[] copyOf(byte[],int)>/r1 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/$i4 -> []
[]:<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/$i5 -> []
[]:<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/$r2 -> [[]:MergedObj{<Merged java.lang.IllegalArgumentException>}]
[]:<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/$r3 -> [[]:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/$r4 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/$r5 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/$r6 -> [[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}, []:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}, []:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}]
[]:<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/$r7 -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/%intconst0 -> []
[]:<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/%stringconst1 -> []
[]:<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/i0 -> []
[]:<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/i1 -> []
[]:<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/i2 -> []
[]:<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/r0 -> [[]:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[13@L4030] newarray byte[i2]}]
[]:<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>/r1 -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>/$r2 -> []
[]:<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>/r0 -> []
[]:<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>/r1 -> []

Points-to sets of all static fields
<java.lang.Integer: byte[] DigitOnes> -> []
<java.lang.Integer: byte[] DigitTens> -> []
<java.lang.String: boolean COMPACT_STRINGS> -> []
<java.lang.StringUTF16: boolean $assertionsDisabled> -> []
<java.lang.StringUTF16: int HI_BYTE_SHIFT> -> []
<java.lang.StringUTF16: int LO_BYTE_SHIFT> -> []
<java.lang.Throwable: java.lang.StackTraceElement[] UNASSIGNED_STACK> -> []
<java.lang.Throwable: java.util.List SUPPRESSED_SENTINEL> -> []

Points-to sets of all instance fields
[]:MergedObj{<Merged java.lang.AssertionError>}.backtrace -> []
[]:MergedObj{<Merged java.lang.AssertionError>}.cause -> [[]:MergedObj{<Merged java.lang.AssertionError>}, []:MergedObj{<Merged java.lang.IllegalArgumentException>}, []:MergedObj{<Merged java.lang.NegativeArraySizeException>}, []:MergedObj{<Merged java.lang.OutOfMemoryError>}, []:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}]
[]:MergedObj{<Merged java.lang.AssertionError>}.detailMessage -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:MergedObj{<Merged java.lang.AssertionError>}.stackTrace -> []
[]:MergedObj{<Merged java.lang.AssertionError>}.suppressedExceptions -> []
[]:MergedObj{<Merged java.lang.IllegalArgumentException>}.backtrace -> []
[]:MergedObj{<Merged java.lang.IllegalArgumentException>}.cause -> [[]:MergedObj{<Merged java.lang.AssertionError>}, []:MergedObj{<Merged java.lang.IllegalArgumentException>}, []:MergedObj{<Merged java.lang.IllegalStateException>}, []:MergedObj{<Merged java.lang.OutOfMemoryError>}, []:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}]
[]:MergedObj{<Merged java.lang.IllegalArgumentException>}.detailMessage -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:MergedObj{<Merged java.lang.IllegalArgumentException>}.stackTrace -> []
[]:MergedObj{<Merged java.lang.IllegalArgumentException>}.suppressedExceptions -> []
[]:MergedObj{<Merged java.lang.IllegalStateException>}.backtrace -> []
[]:MergedObj{<Merged java.lang.IllegalStateException>}.cause -> [[]:MergedObj{<Merged java.lang.AssertionError>}, []:MergedObj{<Merged java.lang.IllegalArgumentException>}, []:MergedObj{<Merged java.lang.IllegalStateException>}]
[]:MergedObj{<Merged java.lang.IllegalStateException>}.detailMessage -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:MergedObj{<Merged java.lang.IllegalStateException>}.stackTrace -> []
[]:MergedObj{<Merged java.lang.IllegalStateException>}.suppressedExceptions -> []
[]:MergedObj{<Merged java.lang.NegativeArraySizeException>}.backtrace -> []
[]:MergedObj{<Merged java.lang.NegativeArraySizeException>}.cause -> [[]:MergedObj{<Merged java.lang.AssertionError>}, []:MergedObj{<Merged java.lang.NegativeArraySizeException>}, []:MergedObj{<Merged java.lang.OutOfMemoryError>}]
[]:MergedObj{<Merged java.lang.NegativeArraySizeException>}.stackTrace -> []
[]:MergedObj{<Merged java.lang.NegativeArraySizeException>}.suppressedExceptions -> []
[]:MergedObj{<Merged java.lang.OutOfMemoryError>}.backtrace -> []
[]:MergedObj{<Merged java.lang.OutOfMemoryError>}.cause -> [[]:MergedObj{<Merged java.lang.AssertionError>}, []:MergedObj{<Merged java.lang.IllegalArgumentException>}, []:MergedObj{<Merged java.lang.NegativeArraySizeException>}, []:MergedObj{<Merged java.lang.OutOfMemoryError>}, []:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}]
[]:MergedObj{<Merged java.lang.OutOfMemoryError>}.detailMessage -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:MergedObj{<Merged java.lang.OutOfMemoryError>}.stackTrace -> []
[]:MergedObj{<Merged java.lang.OutOfMemoryError>}.suppressedExceptions -> []
[]:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}.backtrace -> []
[]:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}.cause -> [[]:MergedObj{<Merged java.lang.AssertionError>}, []:MergedObj{<Merged java.lang.IllegalArgumentException>}, []:MergedObj{<Merged java.lang.OutOfMemoryError>}, []:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}]
[]:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}.detailMessage -> [[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}, []:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}]
[]:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}.stackTrace -> []
[]:MergedObj{<Merged java.lang.StringIndexOutOfBoundsException>}.suppressedExceptions -> []
[]:NewObj{<ArgToResult: void main(java.lang.String[])>[2@L5] new java.lang.String}.coder -> []
[]:NewObj{<ArgToResult: void main(java.lang.String[])>[2@L5] new java.lang.String}.value -> []
[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}.coder -> []
[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}.value -> []
[]:NewObj{<java.lang.String: java.lang.String concat(java.lang.String)>[16@L1947] new java.lang.String}.coder -> []
[]:NewObj{<java.lang.String: java.lang.String concat(java.lang.String)>[16@L1947] new java.lang.String}.value -> [[]:NewObj{<java.lang.StringUTF16: byte[] compress(byte[],int,int)>[0@L168] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[13@L4030] newarray byte[i2]}]
[]:NewObj{<java.lang.String: java.lang.String concat(java.lang.String)>[26@L1953] new java.lang.String}.coder -> []
[]:NewObj{<java.lang.String: java.lang.String concat(java.lang.String)>[26@L1953] new java.lang.String}.value -> [[]:NewObj{<java.lang.StringUTF16: byte[] compress(byte[],int,int)>[0@L168] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[13@L4030] newarray byte[i2]}]
[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}.coder -> []
[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}.count -> []
[]:NewObj{<java.lang.String: void checkBoundsBeginEnd(int,int,int)>[5@L3319] new java.lang.StringBuilder}.value -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}.coder -> []
[]:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}.count -> []
[]:NewObj{<java.lang.String: void checkBoundsOffCount(int,int,int)>[6@L3304] new java.lang.StringBuilder}.value -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}.coder -> []
[]:NewObj{<java.lang.StringLatin1: java.lang.String newString(byte[],int,int)>[0@L715] new java.lang.String}.value -> [[]:NewObj{<java.lang.StringUTF16: byte[] compress(byte[],int,int)>[0@L168] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[13@L4030] newarray byte[i2]}]
[]:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}.coder -> []
[]:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}.count -> []
[]:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[8@L49] new java.lang.StringBuilder}.value -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}.coder -> []
[]:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[5@L1021] new java.lang.String}.value -> [[]:NewObj{<java.lang.StringUTF16: byte[] compress(byte[],int,int)>[0@L168] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[13@L4030] newarray byte[i2]}]
[]:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}.coder -> []
[]:NewObj{<java.lang.StringUTF16: java.lang.String newString(byte[],int,int)>[9@L1025] new java.lang.String}.value -> [[]:NewObj{<java.lang.StringUTF16: byte[] compress(byte[],int,int)>[0@L168] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}, []:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[13@L4030] newarray byte[i2]}]
[]:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}.coder -> []
[]:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}.count -> []
[]:NewObj{<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>[3@L461] new java.lang.StringBuilder}.value -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}.coder -> []
[]:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}.count -> []
[]:NewObj{<java.util.Arrays: byte[] copyOfRange(byte[],int,int)>[4@L4029] new java.lang.StringBuilder}.value -> [[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}, []:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}, []:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}]
[]:TaintObj{alloc=<ArgToResult: void main(java.lang.String[])>[0@L4] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}.coder -> []
[]:TaintObj{alloc=<ArgToResult: void main(java.lang.String[])>[0@L4] temp$0 = invokestatic SourceSink.source(),type=java.lang.String}.value -> []

Points-to sets of all array indexes
[]:NewObj{<java.lang.AbstractStringBuilder: void <init>(int)>[4@L86] newarray byte[i0]}[*] -> []
[]:NewObj{<java.lang.StringUTF16: byte[] compress(byte[],int,int)>[0@L168] newarray byte[i0]}[*] -> []
[]:NewObj{<java.lang.StringUTF16: byte[] newBytesFor(int)>[21@L52] newarray byte[$i1]}[*] -> []
[]:NewObj{<java.util.Arrays: byte[] copyOf(byte[],int)>[0@L3745] newarray byte[i0]}[*] -> []

Detected 1 taint flow(s):
TaintFlow{<ArgToResult: void main(java.lang.String[])>[0@L4] temp$0 = invokestatic <SourceSink: java.lang.String source()>(); -> <ArgToResult: void main(java.lang.String[])>[7@L7] invokestatic <SourceSink: void sink(java.lang.String)>(s2);/0}

